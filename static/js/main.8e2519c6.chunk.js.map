{"version":3,"sources":["constants/index.js","actions/TextActions.js","container/Home.js","App.js","reducers/TextReducer.js","store.js","index.js"],"names":["GET_TEXT_REQUEST","GET_TEXT_ERROR","GET_TEXT_SUCCESS","getText","search","dispatch","getState","a","type","payload","loading","fetch","then","res","json","data","text","content","error","catch","err","Home","useState","open","setOpen","gameOver","setGameOver","typedText","setTypedText","isPlaying","setIsPlaying","speed","setSpeed","timer","setTimer","setText","useDispatch","useSelector","state","char","document","querySelectorAll","corrects","useEffect","split","interval","setInterval","prevTimer","clearInterval","length","word","Math","round","handleClose","event","reason","Alert","props","elevation","variant","Grid","container","justifyContent","item","xs","style","marginTop","Typography","component","color","Card","styles","textCard","map","t","i","display","className","textArea","rows","value","onChange","e","target","textTyped","forEach","textLetter","character","classList","remove","innerText","add","disabled","Button","playButton","fullWidth","onClick","console","log","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","padding","minHeight","resize","fontSize","App","initialState","reducer","combineReducers","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e2519c6.chunk.js","sourcesContent":["export const GET_TEXT_REQUEST = \"GET_TEXT_REQUEST\";\r\nexport const GET_TEXT_ERROR = \"GET_TEXT_ERROR\";\r\nexport const GET_TEXT_SUCCESS = \"GET_TEXT_SUCCESS\";\r\n","import {\r\n    GET_TEXT_ERROR,\r\n    GET_TEXT_REQUEST,\r\n    GET_TEXT_SUCCESS,\r\n} from \"../constants\";\r\n\r\nexport const getText = (search) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: GET_TEXT_REQUEST,\r\n        payload: {\r\n            loading: true,\r\n        },\r\n    });\r\n\r\n    fetch(\"https://api.quotable.io/random\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            dispatch({\r\n                type: GET_TEXT_SUCCESS,\r\n                payload: {\r\n                    loading: false,\r\n                    text: data.content,\r\n                    error: null,\r\n                },\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: GET_TEXT_ERROR,\r\n                payload: {\r\n                    loading: false,\r\n                    error: err,\r\n                },\r\n            });\r\n        });\r\n};\r\n","import { Button, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { getText } from \"../actions/TextActions\";\r\n\r\nexport default function Home() {\r\n    const [open, setOpen] = useState(false);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [typedText, setTypedText] = useState(\"\");\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [timer, setTimer] = useState(0);\r\n    const [text, setText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.text);\r\n    const char = document.querySelectorAll(\".text\");\r\n    const corrects = document.querySelectorAll(\".correct\");\r\n    const handleChange = (e) => {\r\n        setTypedText(e.target.value);\r\n        setIsPlaying(true);\r\n        const textTyped = e.target.value.split(\"\");\r\n\r\n        char.forEach((textLetter, i) => {\r\n            const character = textTyped[i];\r\n            if (character == null) {\r\n                textLetter.classList.remove(\"correct\");\r\n                textLetter.classList.remove(\"wrong\");\r\n            } else if (character === textLetter.innerText) {\r\n                textLetter.classList.add(\"correct\");\r\n                textLetter.classList.remove(\"wrong\");\r\n            } else {\r\n                textLetter.classList.remove(\"correct\");\r\n                textLetter.classList.add(\"wrong\");\r\n            }\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        if (data) {\r\n            setText(data.text.split(\"\"));\r\n            setTimer(0);\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getText());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            const interval = setInterval(() => {\r\n                setTimer((prevTimer) => prevTimer + 1);\r\n            }, 1000);\r\n\r\n            return () => {\r\n                clearInterval(interval);\r\n            };\r\n        }\r\n    }, [isPlaying]);\r\n\r\n    useEffect(() => {\r\n        if (corrects.length === text.length && isPlaying === true) {\r\n            setGameOver(true);\r\n        }\r\n    }, [typedText]);\r\n\r\n    useEffect(() => {\r\n        if (gameOver) {\r\n            const word = char.length / 4.7;\r\n            setSpeed(Math.round((word / timer) * 60) + \" Words Per Minute\");\r\n            setIsPlaying(false);\r\n        }\r\n    }, [gameOver]);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        setOpen(true);\r\n    }, []);\r\n\r\n    const handlePlayAgain = () => {\r\n        setGameOver(false);\r\n        dispatch(getText());\r\n        setTypedText(\"\");\r\n        console.log(char);\r\n        char.forEach((textLetter, i) => {\r\n            textLetter.classList.remove(\"correct\");\r\n            textLetter.classList.remove(\"wrong\");\r\n        });\r\n    };\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    return (\r\n        <Grid container={true} justifyContent=\"center\" item={true} xs={9}>\r\n            {!gameOver ? (\r\n                <Grid\r\n                    container={true}\r\n                    justifyContent=\"center\"\r\n                    style={{ marginTop: \"2rem\" }}\r\n                >\r\n                    {\" \"}\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        component=\"h2\"\r\n                        style={{ color: \"#ffffff\" }}\r\n                    >\r\n                        {\" \"}\r\n                        {timer}\r\n                    </Typography>\r\n                </Grid>\r\n            ) : (\r\n                <Grid\r\n                    container={true}\r\n                    justifyContent=\"center\"\r\n                    style={{ marginTop: \"2rem\" }}\r\n                >\r\n                    {\" \"}\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        component=\"h2\"\r\n                        style={{ color: \"#ffffff\" }}\r\n                    >\r\n                        {\"Your speed is \"}\r\n                        {speed}\r\n                    </Typography>\r\n                </Grid>\r\n            )}\r\n\r\n            <Card style={styles.textCard}>\r\n                {text &&\r\n                    text.map((t, i) => (\r\n                        <Typography\r\n                            variant=\"h4\"\r\n                            component=\"h1\"\r\n                            key={i}\r\n                            style={{\r\n                                display: \"inline\",\r\n                            }}\r\n                            className=\"text\"\r\n                        >\r\n                            {t}\r\n                        </Typography>\r\n                    ))}\r\n            </Card>\r\n            <Card style={styles.textCard}>\r\n                <textarea\r\n                    style={styles.textArea}\r\n                    rows=\"5\"\r\n                    value={typedText}\r\n                    onChange={handleChange}\r\n                    disabled={gameOver}\r\n                ></textarea>\r\n            </Card>\r\n            <Grid item={true} xs={2} style={{ marginTop: \"2rem\" }}>\r\n                <Button\r\n                    style={styles.playButton}\r\n                    variant=\"contained\"\r\n                    // disabled={gameOver}\r\n                    color={\"primary\"}\r\n                    fullWidth={true}\r\n                    onClick={handlePlayAgain}\r\n                >\r\n                    {isPlaying && gameOver === false\r\n                        ? \"New Words?\"\r\n                        : isPlaying === false && gameOver === false\r\n                        ? \"Play\"\r\n                        : \"Play Again\"}\r\n                </Button>\r\n            </Grid>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                key={{ vertical: \"top\", horizontal: \"left\" }}\r\n            >\r\n                <Alert onClose={handleClose} severity=\"info\">\r\n                    Type the first letter to start playing.\r\n                </Alert>\r\n            </Snackbar>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    textCard: {\r\n        width: \"100%\",\r\n        marginTop: \"2rem\",\r\n        padding: \"4rem\",\r\n        minHeight: \"8rem\",\r\n    },\r\n    textArea: {\r\n        width: \"100%\",\r\n        resize: \"none\",\r\n        fontSize: \"1.5rem\",\r\n    },\r\n};\r\n","import { Grid } from \"@material-ui/core\";\nimport Home from \"./container/Home\";\n\nfunction App() {\n    return (\n        <Grid container={true} justifyContent=\"center\">\n            <Home />\n        </Grid>\n    );\n}\n\nexport default App;\n","import {\r\n    GET_TEXT_ERROR,\r\n    GET_TEXT_SUCCESS,\r\n    GET_TEXT_REQUEST,\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    text: \"\",\r\n    error: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_TEXT_REQUEST:\r\n        case GET_TEXT_ERROR:\r\n        case GET_TEXT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport TextReducer from \"./reducers/TextReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst reducer = combineReducers({\r\n    text: TextReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}